.lava-test:
  extends:
    - .ci-run-policy
  stage: test
  variables:
    GIT_STRATEGY: none # testing doesn't build anything from source
    ENV_VARS: "MESA_GLES_VERSION_OVERRIDE=3.0 DEQP_PARALLEL=6"
  script:
    - mkdir -p /srv/${FILES_HOST_NAME}/$CI_JOB_ID/
    - cp /lava-files/${KERNEL_IMAGE_NAME} /srv/${FILES_HOST_NAME}/$CI_JOB_ID/.
    - cp /lava-files/${DEVICE_TYPE}.dtb /srv/${FILES_HOST_NAME}/$CI_JOB_ID/.
    - tar -C /lava-files/rootfs-${ARCH} -xf artifacts/install.tar
    - pushd /lava-files/rootfs-${ARCH}
    - find -H  |  cpio -H newc -o | gzip -c - > /srv/${FILES_HOST_NAME}/$CI_JOB_ID/lava-rootfs-${ARCH}.cpio.gz
    - popd
    - >
      artifacts/generate_lava.py \
        --template artifacts/lava-deqp.yml.jinja2 \
        --pipeline-info "$CI_PIPELINE_URL on $CI_COMMIT_REF_NAME ${CI_NODE_INDEX}/${CI_NODE_TOTAL}" \
        --base-artifacts-url ${FILES_HOST_URL}/$CI_JOB_ID \
        --device-type ${DEVICE_TYPE} \
        --env-vars "${ENV_VARS}" \
        --arch ${ARCH} \
        --deqp-version gles2 \
        --kernel-image-name ${KERNEL_IMAGE_NAME} \
        --kernel-image-type "${KERNEL_IMAGE_TYPE}" \
        --gpu-version ${GPU_VERSION} \
        --boot-method ${BOOT_METHOD} \
        --lava-tags "${LAVA_TAGS}" \
        --ci-node-index "${CI_NODE_INDEX}" \
        --ci-node-total "${CI_NODE_TOTAL}"
    - lava_job_id=`lavacli jobs submit lava-deqp.yml` || lavacli jobs submit lava-deqp.yml
    - echo $lava_job_id
    - rm -rf artifacts/*
    - cp lava-deqp.yml artifacts/.
    - lavacli jobs logs $lava_job_id | grep -a -v "{'case':" | tee artifacts/lava-deqp-$lava_job_id.log
    - lavacli jobs show $lava_job_id
    - result=`lavacli results $lava_job_id 0_deqp deqp | head -1`
    - echo $result
    - '[[ "$result" == "pass" ]]'
  after_script:
    - rm -rf /srv/${FILES_HOST_NAME}/$CI_JOB_ID/
  artifacts:
    when: always
    paths:
      - artifacts/

.lava-test:armhf:
  variables:
    ARCH: armhf
    KERNEL_IMAGE_NAME: zImage
    KERNEL_IMAGE_TYPE: "type:\ zimage"
    BOOT_METHOD: u-boot
  extends:
    - .lava-test
    - .use-arm_build
  dependencies:
    - meson-armhf
  needs:
    - meson-armhf

.lava-test:arm64:
  variables:
    ARCH: arm64
    KERNEL_IMAGE_NAME: Image
    KERNEL_IMAGE_TYPE: "type:\ image"
    BOOT_METHOD: u-boot
  extends:
    - .lava-test
    - .use-arm_build
  dependencies:
    - meson-arm64
  needs:
    - meson-arm64

panfrost-t720-test:arm64:
  extends: .lava-test:arm64
  variables:
    DEVICE_TYPE: sun50i-h6-pine-h64
    GPU_VERSION: panfrost-t720
    FILES_HOST_NAME: "mesa-ci-lava-files.freedesktop.org"
    FILES_HOST_URL: "https://mesa-ci-lava-files.freedesktop.org"
  tags:
    - mesa-ci-aarch64-lava-collabora

panfrost-t760-test:armhf:
  extends: .lava-test:armhf
  variables:
    DEVICE_TYPE: rk3288-veyron-jaq
    GPU_VERSION: panfrost-t760
    BOOT_METHOD: depthcharge
    KERNEL_IMAGE_TYPE: ""
    FILES_HOST_NAME: "mesa-ci-lava-files.freedesktop.org"
    FILES_HOST_URL: "https://mesa-ci-lava-files.freedesktop.org"
  tags:
    - mesa-ci-aarch64-lava-collabora

panfrost-t860-test:arm64:
  extends: .lava-test:arm64
  variables:
    DEVICE_TYPE: rk3399-gru-kevin
    GPU_VERSION: panfrost-t860
    BOOT_METHOD: depthcharge
    KERNEL_IMAGE_TYPE: ""
    FILES_HOST_NAME: "mesa-ci-lava-files.freedesktop.org"
    FILES_HOST_URL: "https://mesa-ci-lava-files.freedesktop.org"
  tags:
    - mesa-ci-aarch64-lava-collabora

.panfrost-t820-gles2:arm64:
  extends: .lava-test:arm64
  variables:
    DEVICE_TYPE: meson-gxm-khadas-vim2
    GPU_VERSION: panfrost-t820
    LAVA_TAGS: panfrost
  tags:
    - mesa-ci-aarch64-lava-baylibre

.lima-mali400-test:armhf:
  parallel: 2
  extends: .lava-test:armhf
  variables:
    DEVICE_TYPE: sun8i-h3-libretech-all-h3-cc
    GPU_VERSION: lima
    ENV_VARS: "DEQP_PARALLEL=3"
  tags:
    - mesa-ci-aarch64-lava-baylibre

.lima-mali450-test:arm64:
  extends: .lava-test:arm64
  variables:
    DEVICE_TYPE: meson-gxl-s905x-libretech-cc
    GPU_VERSION: lima
    ENV_VARS: "DEQP_PARALLEL=6"
  tags:
    - mesa-ci-aarch64-lava-baylibre
